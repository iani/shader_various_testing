#extension GL_ARB_texture_rectangle : enable

uniform vec3 iResolution;
uniform vec4 iMouse;
uniform float iGlobalTime;
uniform sampler2DRect iCh;
uniform sampler2DRect iCh1;
#define ITERS 64


void main(void) {
	vec2 uv = gl_FragCoord.xy / iResolution.xy;
	vec2 block = floor(gl_FragCoord.xy / vec2(16));
	vec2 uv_noise = block / vec2(64);
	uv_noise += floor(vec2(iGlobalTime) * vec2(1234.0, 3543.0)) / vec2(64);
	
	float block_thresh = pow(fract(iGlobalTime * 1236.0453), 2.0) * 0.2;
	float line_thresh = pow(fract(iGlobalTime * 2236.0453), 3.0) * 0.7;
	
	vec2 uv_r = uv, uv_g = uv, uv_b = uv;

	if (texture2DRect(iCh, gl_FragCoord.xy-iMouse.xy).r < block_thresh || texture2DRect(iCh, gl_FragCoord.xy-iMouse.xy).g < line_thresh) {

		vec2 dist = (fract(uv_noise) - 0.5) * 0.3;
		uv_r += dist * 0.1;
		uv_g += dist * 0.2;
		uv_b += dist * 0.125;
	}

	gl_FragColor.r = texture2DRect(iCh1, gl_FragCoord.xy).r;
	gl_FragColor.g = texture2DRect(iCh1, gl_FragCoord.xy).g;
	gl_FragColor.b = texture2DRect(iCh1, gl_FragCoord.xy).b;

	// loose luma for some blocks
	if (texture2DRect(iCh, gl_FragCoord.xy).g < block_thresh)
		gl_FragColor.rgb = gl_FragColor.ggg;

	// discolor block lines
	if (texture2DRect(iCh, gl_FragCoord.xy).b * 3.5 < line_thresh)
		gl_FragColor.rgb = vec3(0.0, dot(gl_FragColor.rgb, vec3(1.0)), 0.0);

	// interleave lines in some blocks
	if (texture2DRect(iCh, gl_FragCoord.xy).g * 1.5 < block_thresh ||
		texture2DRect(iCh, gl_FragCoord.xy).b * 1.5 < line_thresh) {
		float line = fract(gl_FragCoord.y / 1.0);
		vec3 mask = vec3(.0, .0, 1.0);
		if (line > 0.133)
			mask = vec3(0.0, 0.0,1.5);
		if (line > 0.666)
			mask = vec3(2.0, 0.0,0.0);
		
		gl_FragColor.xyz *= mask;
	}
}
